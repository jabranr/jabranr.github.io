{"componentChunkName":"component---src-templates-post-js","path":"/projects/php-library-for-twitter-api-v1-1/","result":{"data":{"site":{"siteMetadata":{"title":"Jabran Rafique - Software Engineer (Web)","author":"Jabran Rafique"}},"markdownRemark":{"id":"a075ca08-6b54-5a1c-851f-0f58382ee3bf","excerpt":"This project is deprecated and no more maintained. Please use the new improved version of this project named as “Fetchwitter” and available at https://github…","html":"<blockquote>\n<p>This project is deprecated and no more maintained.</p>\n</blockquote>\n<p>Please use the new improved version of this project named as “Fetchwitter” and available at <a href=\"https://github.com/jabranr/fetchwitter\">https://github.com/jabranr/fetchwitter</a></p>\n<hr>\n<h3>How to use / How it works</h3>\n<h4>Step 1: Create an application</h4>\n<p>First of you will need to register/login at <a href=\"https://dev.twitter.com/apps\">https://dev.twitter.com/apps</a> and create a new application. Fill out the required fields and it will generate the required credentials for you. The only credentials you need are <code class=\"language-text\">consumer key</code> and <code class=\"language-text\">consumer secret</code>.</p>\n<h4>Step 2: Exchange credentials for access token</h4>\n<p>Now you need to make a POST request to API’s oAuth endpoint to exchange above-mentioned credentials for an <code class=\"language-text\">access token</code>. The request made at this stage requires <code class=\"language-text\">Authorization headers</code>. This will result in a response with app level <code class=\"language-text\">bearer access token</code>. You might want to save/cache the acquired <code class=\"language-text\">access token</code> instead of making a request each time.</p>\n<h4>Step 3: Make request to get the required feed</h4>\n<p>Now that you have the <code class=\"language-text\">access token</code>, you can make requests to Twitter API endpoint and receive data in response. The request made at this stage also requires inclusion of <code class=\"language-text\">Authorization headers</code>.</p>\n<p>Now since all these results are returned in plain text and so are the links, hashtags and mentions in the tweets. This issue can easily be solved by using <code class=\"language-text\">regex match and replace</code> methods, that is available in this example as <code class=\"language-text\">text2tweet()</code> function.</p>\n<h3>License</h3>\n<p>Project is available under <a href=\"http://opensource.org/licenses/MIT\">MIT License</a></p>","timeToRead":1,"frontmatter":{"title":"PHP library for Twitter API v1.1","code":"https://github.com/jabranr/twitter-api-v1.1","date":"October 09, 2013"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/projects/php-library-for-twitter-api-v1-1/","previous":{"fields":{"slug":"/articles/fetch-tweets-with-twitter-api-v1-1/"},"frontmatter":{"title":"Fetch tweets with Twitter API v1.1","permalink":"fetch-tweets-with-twitter-api-v1-1"}},"next":{"fields":{"slug":"/articles/using-special-integers-with-bitwise-operators-for-php-rbac/"},"frontmatter":{"title":"Using Special Integers with Bitwise Operators for PHP RBAC","permalink":"using-special-integers-with-bitwise-operators-for-php-rbac"}}}}}