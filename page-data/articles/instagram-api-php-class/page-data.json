{"componentChunkName":"component---src-templates-post-js","path":"/articles/instagram-api-php-class/","result":{"data":{"site":{"siteMetadata":{"title":"Jabran Rafique - Software Engineer (Web)","author":"Jabran Rafique"}},"markdownRemark":{"id":"f3729126-8a6c-52fc-9041-255fa5bf5ae2","excerpt":"Recently, I have been very much into building Facebook applications. These applications vary from simple HTML forms for user data capture with fan gates to…","html":"<p>Recently, I have been very much into building Facebook applications. These applications vary from simple HTML forms for user data capture with fan gates to complex surveys—but with interactive, simple and engaging UI.</p>\n<p>This also gave me an opportunity to experiment with various RESTful web services such as <a href=\"https://developers.facebook.com/docs/concepts/opengraph/\">Facebook Open Graph</a>, <a href=\"https://dev.twitter.com/docs/api\">Twitter</a>, <a href=\"http://instagram.com/developer/\">Instagram</a>, <a href=\"https://developer.spotify.com/technologies/web-api/\">Spotify</a> and <a href=\"http://api.beatport.com/\">Beatport</a> APIs in unique manners. However, Instagram API was the one that I happened to use quite a lot while building few applications—therefore is the main focus of this post.</p>\n<p>Going through development with Instagram API with no existing libraries based on its SDKs is a long story itself to tell at another time perhaps. Nonetheless, after facing much of trouble at the end I decided to build a custom PHP class. The idea is to make API’s various methods easily accessible. So here it is with a very initial version. It lacks few important methods currently which I shall be updating in few days. However, current methods are enough to authorise a user and get their basic information.</p>\n<p>The package consists of two files.</p>\n<ul>\n<li><code class=\"language-text\">instagram.class.php</code></li>\n<li><code class=\"language-text\">ig-config.php</code></li>\n<li><code class=\"language-text\">ig-config.php</code> shall contain the configuration information that is required for <code class=\"language-text\">instagram.class.php</code> to work properly.</li>\n</ul>\n<h3>Instructions:</h3>\n<ul>\n<li>Include/require the <code class=\"language-text\">instagram.class.php</code> file.</li>\n<li>Create a new instance of class i.e. <code class=\"language-text\">$ig = new JRIG( parameters )</code>;</li>\n</ul>\n<p><strong>Parameters:</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token variable\">$client_id</span>\n<span class=\"token variable\">$client_secret</span>\n<span class=\"token variable\">$redirect_uri</span>\n<span class=\"token variable\">$scope</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<p>The parameters are optional and by default an instance will take the parameter values from <code class=\"language-text\">ig-config.php</code></p>\n<p>However, if you like to create an instance on the go to use another registered Instagram client then you can do so by providing these optional parameters.</p>\n<p>Following methods are currently available using a defined instance:</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token comment\">// returns an Instagram OAuth URI</span>\n<span class=\"token variable\">$ig</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">get_oauth_uri</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// returns client id</span>\n<span class=\"token variable\">$ig</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">get_client_id</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// returns client secret</span>\n<span class=\"token variable\">$ig</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">get_client_secret</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// returns scopes/permissions</span>\n<span class=\"token variable\">$ig</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">get_scope</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// returns user basic information including access_token as an associative Array()</span>\n<span class=\"token variable\">$ig</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">get_access_token</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>A number of other methods are also part of this release. The project is available at GitHub under MIT License for use and contributions.</p>\n<p><strong>Example:</strong> <a href=\"http://jabran.me/sandbox/igapi/\">http://jabran.me/sandbox/igapi/</a></p>\n<p><strong>GitHub:</strong> <a href=\"https://github.com/jabranr/instagram-api-php\">https://github.com/jabranr/instagram-api-php</a></p>","timeToRead":2,"frontmatter":{"title":"Instagram API PHP Class","code":null,"date":"March 08, 2013"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/articles/instagram-api-php-class/","previous":{"fields":{"slug":"/articles/finally-a-blog-and-folio/"},"frontmatter":{"title":"Welcome at my blog and folio","permalink":"finally-a-blog-and-folio"}},"next":{"fields":{"slug":"/projects/socialmedia-js/"},"frontmatter":{"title":"Socialmedia.js","permalink":null}}}}}